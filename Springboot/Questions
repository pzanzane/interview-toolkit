1. Reactive Spring Framework, Webflux
1. @SpringApplication Annotation
2. @ComponentScan Annotation Working
3. Actuator and defualt end points of actutators
4. Active profiling
5. Spring MVC flow
6. What are some of the starter dependencies/ Basic dependenices used in spring boot.
7. defaut scope of bean in spring
8. Bean factory Vs Application context
9. AutoConfiguration in Spring Boot
10. Benefit of JPARepository Interface
11. Create a custom JPARepository
12. Can we add a Spring boot project dependency in a core java project 
13. What is Spring boot? benefits
15. Yaml Configurations
16. Use of dev tools dependency
17. Can we create a custom actutator endpoint 
18. Synchronous vs Asynchronous rest calls
19. How to make Asynchronous Rest Calls
20. Put vs Post mapping
21. Is there a difference in put and post parameters
22. DI vs IOC
23. default bean scope in spring boot
24. other bean scopes
25. prototype vs request bean scope
26. Request Param Vs Path variable
27. Can we combine Path variable and Request Param in a single rest call
28. How to accept XML as a parameter. Dependency name
29. How to send JSON as a response
30. LifeCycle method in Spring Bean
32. @EnableAutoConfiguration
33. Use of @Qualifier
34. difference between @Qualifier and @Primary
35. @Scope
36. Singleton vs prototype
37. How to configure applicationContext?
38. Benefits of Spring Boot? Which version of Spring boot
39. Configurations file in Spring -- dispatchher servlet, web.xml, servlet.xml etc
40. # and $ significance @Value annotation
41. StereoType Annotations
42. Spring Boot vs Spring 
43. Benefit of Spring Data JPA
44. Version of Spring Boot Used
45. Different RequestMapping Annotations
46. RestController vs Controller
47. How to send .xls or txt file as response
48. Internal Server Error and Exception Handling in SpringBoot
50. How to Skip/disable @EnableAutoConfiguration for a class
51. Schedulers in Spring
52. Different ways to create Beans in Spring
53. Different ways to access properties in Spring


------------------------------------------
# Project Derived Interview Questions

1. What is Interface Driven Rest Controller ?
2. Why we should use Lombok library ?
3. How will you validate Request Body and Query. Path Parameters ?
4. How do you handle the exceptions in Rest API ?
5. What is Data Transfer Objects (DTO) ?
6. What is a Custom Validator, explain with example, Usually this is a business requirement eg. AccountURI.



---------------------------------------------
# From Shiv


* What is a functional interface? Benefits of it?
* @qulifier vs @primary
* Factory vs Abstract Factory vs Builder pattern
* security in your project. How to check valid client.
* what is lazy loading in stream?
Hashmap vs ConcurrentHashMap
If Hashmap can synchronize using Collections.syncronizeMap method then why concurrentHashMap introduced?
Bean scopes and deprecated and newly added
Bean life cycle
Hash map internal work/ implementation. What is the difference in java 8 hashmap
How to make class singleton. Double locking mechanism in singleton(volatile)
Difference between singleton class and singleton bean
Implement two database connections in springboot
@Value?
@controller vs @Restcontroller
Exception handling @ service layer in springboot
How would you optimize the query
What is responsive page?
What is Kafka?
Spring cloud?
Discovery server (Eureka)? How to implement?
Different types of @Autowiring ? --> no(default), byName, byType and constructor
Why is java so popular? What is the difference between Java and othe  native language
Write  your own equal method to compare two strings
Microservices Design Patterns(whatever you know)
Circular dependency. How to handle
How is Bean works? - life cycle
Solid principles with examples
Filter Student with sub=math and marks >75
Why used factory Pattern?
What is circuit breaker
How to handle fault tolarence?
When to use a qualifier in spring?
How to use backend(DB)
When to use SAGA?
How do you communicate in microservices architecture?
How to handle global exception in microservices
Medline - 
1. SOLID principles
2. JVM loaders?
3. What is enhancement in the map in Java8? Why used a balanced tree?
4. How handle fault talarance in microservices 
5. Cqrs, saga, circuit breaker
6. Strategy pattern / observer
7. Write custom actuator
8. Try with resources
9. How to use custome resources in try with resources - implement Autoclosable interface
10. Circular dependency? Different ways to handle
11. Unit test vs. integration test
12. AOP- JOINPOINT
13. Transactional propogation 
14. Coding - java 8
15. Equals and hashcode contract
16. What is the cyclic barrier?
17.  JAVA8 - map vs flatmap. When to use flatmap?
Sutherland  - 
1. What are the benefits and disadvantages of microservices?
2. How to convert monolithic to microservices 
3. How do you handle the fault tolerance in microservices?
4. What is RabbitMq? How does it work?
5. What is discovery in microservices?
6. How to trace the logs
7. What is the saga, cqrs, circuit breaker 
8. What are solid principles 
9. Write a code for end to end rest service to update the account info
10. What is the default method
11. What is stream
12. What is lambda
13. Can the default method override
14. How do you handle the  security in your application?
15. What is the content of JWT?
 16. Array List vs Linked List
17. What is blue - green deployment?
1. What is splunk
2. Microservices Design Patterns 
3. What is observable in MS
4. What is the use of executor framework
5. What is a reentrant lock
6. What is a completable future
7. What is BFF in MS (Graph ql)
8. Sharding
7. Idempotancy in MS
8. What is CDC in the database 
9. Any experience on ELK
10. Experience on promethus?
11. What is view?
12. Java 8 - optinal, predicate, parallel stream13.  Performance testing? How do you calculate in the current application
